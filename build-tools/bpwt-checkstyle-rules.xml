<?xml version="1.0"?><!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN" "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<!-- See the Sun Code Conventions at http://java.sun.com/docs/codeconv/ -->
<module name="Checker">

  <!-- Checks whether files end with a new line.                        -->
  <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
  <module name="NewlineAtEndOfFile">
     <property name="lineSeparator" value="lf" />
  </module>

  <!-- Checks that property files contain the same keys.         -->
  <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
  <module name="Translation"/>

  <!-- Checks for Size Violations.                    -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <module name="FileLength"/>

  <!-- Checks for whitespace                               -->
  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- Miscellaneous other checks.                   -->
  <!-- See http://checkstyle.sf.net/config_misc.html -->
  <module name="RegexpSingleline">
    <property name="format" value="\s+$"/>
    <property name="minimum" value="0"/>
    <property name="maximum" value="0"/>
    <property name="message" value="Line has trailing spaces."/>
  </module>

  <!-- Checks for Headers                                -->
  <!-- See http://checkstyle.sf.net/config_header.html   -->
  <module name="RegexpHeader">
    <property name="header" value="^\/\* Copyright BP - Weather Tracker Application. All rights reserved. \*\/"/>
  </module>

  <!-- Checks for suppressed audit events                                         -->
  <!-- See http://checkstyle.sourceforge.net/config.html#SuppressionCommentFilter -->
  <!-- module name="SuppressionCommentFilter"/-->


  <module name="TreeWalker">

    <!-- Checks for Javadoc comments.                     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html -->
    <module name="JavadocMethod">
      <property name="scope" value="package"/>
      <property name="allowMissingPropertyJavadoc" value="true"/>
    </module>
    <module name="JavadocType"/>
    <module name="JavadocVariable">
      <property name="scope" value="package"/>
    </module>
    <module name="JavadocStyle">
      <property name="checkFirstSentence" value="false"/>
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for Naming Conventions.                  -->
    <!-- See http://checkstyle.sf.net/config_naming.html -->
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Checks for imports                              -->
    <!-- See http://checkstyle.sf.net/config_import.html -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
   <module name="RedundantImport"/> 
    <module name="UnusedImports"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="LineLength">
      <property name="max" value="120"/>
      <!-- Changed to 120 - IntelliJ default -->
    </module>
    <module name="MethodLength"/>
    <module name="ParameterNumber"/>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="EmptyForIteratorPad"/>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter"/>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap">
      <property name="severity" value="warning"/>
    </module>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAND, LE, LITERAL_ASSERT, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, TYPE_EXTENSION_AND, WILDCARD_TYPE"/>
      <!-- All (the default) except removing the check for whitespace around generic declarations -->
    </module>

    <!-- Modifier Checks                                    -->
    <!-- See http://checkstyle.sf.net/config_modifiers.html -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Checks for blocks. You know, those {}'s         -->
    <!-- See http://checkstyle.sf.net/config_blocks.html -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock"/>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly"/>

    <!-- Checks for common coding problems               -->
    <!-- See http://checkstyle.sf.net/config_coding.html -->
    <module name="AvoidInlineConditionals"/>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField"/>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment"/>
    <module name="MagicNumber">
      <property name="ignoreAnnotation" value="true"/>
    </module>
    <module name="MissingSwitchDefault"/>
   <!--  <module name="RedundantThrows"/> -->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn">
      <property name="severity" value="warning"/>
    </module>

    <!-- Checks for class design                         -->
    <!-- See http://checkstyle.sf.net/config_design.html -->
    <module name="DesignForExtension"/>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="ArrayTypeStyle"/>
    <module name="FinalParameters"/>
    <module name="TodoComment"/>
    <module name="UpperEll"/>

    <!-- Ensure 4 spaces per indentation level -->
    <module name="Indentation">
      <property name="severity" value="warning"/>
    </module>
    <!-- Required for the SuppressionCommentFilter module -->
    <!-- module name="FileContentsHolder"/ -->

    <!-- Printing directly to console -->
    <module name="Regexp">
      <property name="format" value="System\.out\.print"/>
      <property name="illegalPattern" value="true"/>
      <property name="message" value="Printing to standard out forbidden - use proper logging."/>
    </module>
    <module name="Regexp">
      <property name="format" value="System\.err\.print"/>
      <property name="illegalPattern" value="true"/>
      <property name="message" value="Printing to standard error forbidden - use proper logging."/>
    </module>
    <!-- Auto-generated comments -->
    <module name="Regexp">
      <property name="format" value="\* Created by IntelliJ IDEA."/>
      <property name="illegalPattern" value="true"/>
    </module>
    <!-- Throwing and catching of Exception, Throwable, Error or RuntimeException - --><!-- code should throw more specific exceptions, and these errors are too       --><!-- low-level/generic for most code to catch and deal with sensibly            -->
    <module name="IllegalThrows">
      <property name="illegalClassNames" value="java.lang.Exception, java.lang.Throwable, java.lang.Error, java.lang.RuntimeException"/>
    </module>
    <module name="IllegalCatch">
      <property name="illegalClassNames" value="java.lang.Throwable, java.lang.Error"/>
    </module>
    <!-- may catch these under some circumstances -->
    <module name="IllegalCatch">
      <property name="illegalClassNames" value="java.lang.Exception, java.lang.RuntimeException"/>
      <property name="severity" value="warning"/>
    </module>
    <!-- Cyclomatic complexity - default = 10 -->
    <module name="CyclomaticComplexity"/>
  </module>
</module>
